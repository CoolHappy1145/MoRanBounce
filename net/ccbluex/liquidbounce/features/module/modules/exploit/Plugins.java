package net.ccbluex.liquidbounce.features.module.modules.exploit;

import java.util.ArrayList;
import java.util.Collections;
import jdk.internal.dynalink.CallSiteDescriptor;
import joptsimple.internal.Strings;
import net.ccbluex.liquidbounce.api.minecraft.network.play.server.ISPacketTabComplete;
import net.ccbluex.liquidbounce.event.EventTarget;
import net.ccbluex.liquidbounce.event.PacketEvent;
import net.ccbluex.liquidbounce.event.UpdateEvent;
import net.ccbluex.liquidbounce.features.module.Module;
import net.ccbluex.liquidbounce.features.module.ModuleCategory;
import net.ccbluex.liquidbounce.features.module.ModuleInfo;
import net.ccbluex.liquidbounce.utils.ClientUtils;
import net.ccbluex.liquidbounce.utils.timer.TickTimer;

@ModuleInfo(name = "Plugins", description = "Allows you to see which plugins the server is using.", category = ModuleCategory.EXPLOIT)
/* loaded from: L-out.jar:net/ccbluex/liquidbounce/features/module/modules/exploit/Plugins.class */
public class Plugins extends Module {
    private final TickTimer tickTimer = new TickTimer();

    public void onEnable() {
        if (f157mc.getThePlayer() == null) {
            return;
        }
        f157mc.getNetHandler().addToSendQueue(classProvider.createCPacketTabComplete("/"));
        this.tickTimer.reset();
    }

    @EventTarget
    public void onUpdate(UpdateEvent updateEvent) {
        this.tickTimer.update();
        if (this.tickTimer.hasTimePassed(20)) {
            ClientUtils.displayChatMessage("\u00a7cPlugins check timed out...");
            this.tickTimer.reset();
            setState(false);
        }
    }

    @EventTarget
    public void onPacket(PacketEvent packetEvent) {
        if (classProvider.isSPacketTabComplete(packetEvent.getPacket())) {
            ISPacketTabComplete iSPacketTabCompleteAsSPacketTabComplete = packetEvent.getPacket().asSPacketTabComplete();
            ArrayList arrayList = new ArrayList();
            for (String str : iSPacketTabCompleteAsSPacketTabComplete.getCompletions()) {
                String[] strArrSplit = str.split(CallSiteDescriptor.TOKEN_DELIMITER);
                if (strArrSplit.length > 1) {
                    String strReplace = strArrSplit[0].replace("/", "");
                    if (!arrayList.contains(strReplace)) {
                        arrayList.add(strReplace);
                    }
                }
            }
            Collections.sort(arrayList);
            if (!arrayList.isEmpty()) {
                ClientUtils.displayChatMessage("\u00a7aPlugins \u00a77(\u00a78" + arrayList.size() + "\u00a77): \u00a7c" + Strings.join((String[]) arrayList.toArray(new String[0]), "\u00a77, \u00a7c"));
            } else {
                ClientUtils.displayChatMessage("\u00a7cNo plugins found.");
            }
            setState(false);
            this.tickTimer.reset();
        }
    }
}
