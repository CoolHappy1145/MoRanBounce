package net.ccbluex.liquidbounce.features.module.modules.exploit;

import kotlin.Metadata;
import kotlin.TypeCastException;
import kotlin.jvm.internal.Intrinsics;
import net.ccbluex.liquidbounce.LiquidBounce;
import net.ccbluex.liquidbounce.api.minecraft.client.entity.IEntityPlayerSP;
import net.ccbluex.liquidbounce.api.minecraft.client.network.IINetHandlerPlayClient;
import net.ccbluex.liquidbounce.features.module.Module;
import net.ccbluex.liquidbounce.features.module.ModuleCategory;
import net.ccbluex.liquidbounce.features.module.ModuleInfo;
import net.ccbluex.liquidbounce.utils.MinecraftInstance;
import net.ccbluex.liquidbounce.value.FloatValue;
import net.ccbluex.liquidbounce.value.ListValue;

@Metadata(m24mv = {1, 1, 16}, m25bv = {1, 0, 3}, m23k = 1, m26d1 = {"\ufffd\ufffd \n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\ufffd\ufffd\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u0002\n\ufffd\ufffd\b\u0007\u0018\ufffd\ufffd2\u00020\u0001B\u0005\u00a2\u0006\u0002\u0010\u0002J\b\u0010\b\u001a\u00020\tH\u0016R\u000e\u0010\u0003\u001a\u00020\u0004X\u0082\u0004\u00a2\u0006\u0002\n\ufffd\ufffdR\u000e\u0010\u0005\u001a\u00020\u0006X\u0082\u0004\u00a2\u0006\u0002\n\ufffd\ufffdR\u000e\u0010\u0007\u001a\u00020\u0004X\u0082\u0004\u00a2\u0006\u0002\n\ufffd\ufffd\u00a8\u0006\n"}, m27d2 = {"Lnet/ccbluex/liquidbounce/features/module/modules/exploit/Clip;", "Lnet/ccbluex/liquidbounce/features/module/Module;", "()V", "horizontalValue", "Lnet/ccbluex/liquidbounce/value/FloatValue;", "modeValue", "Lnet/ccbluex/liquidbounce/value/ListValue;", "verticalValue", "onEnable", "", LiquidBounce.CLIENT_NAME})
@ModuleInfo(name = "Clip", description = "Allows you to clip through blocks.", category = ModuleCategory.EXPLOIT, canEnable = false)
/* loaded from: L-out.jar:net/ccbluex/liquidbounce/features/module/modules/exploit/Clip.class */
public final class Clip extends Module {
    private final ListValue modeValue = new ListValue("Mode", new String[]{"Teleport", "Flag"}, "Teleport");
    private final FloatValue horizontalValue = new FloatValue("Horizontal", 0.0f, -10.0f, 10.0f);
    private final FloatValue verticalValue = new FloatValue("Vertical", 5.0f, -10.0f, 10.0f);

    public void onEnable() {
        IEntityPlayerSP thePlayer = MinecraftInstance.f157mc.getThePlayer();
        if (thePlayer != null) {
            double radians = Math.toRadians(thePlayer.getRotationYaw());
            double dDoubleValue = (-Math.sin(radians)) * ((Number) this.horizontalValue.get()).doubleValue();
            double dCos = Math.cos(radians) * ((Number) this.horizontalValue.get()).doubleValue();
            String str = (String) this.modeValue.get();
            if (str == null) {
                throw new TypeCastException("null cannot be cast to non-null type java.lang.String");
            }
            String lowerCase = str.toLowerCase();
            Intrinsics.checkExpressionValueIsNotNull(lowerCase, "(this as java.lang.String).toLowerCase()");
            switch (lowerCase.hashCode()) {
                case -1360201941:
                    if (lowerCase.equals("teleport")) {
                        thePlayer.setPosition(thePlayer.getPosX() + dDoubleValue, thePlayer.getPosY() + ((Number) this.verticalValue.get()).doubleValue(), thePlayer.getPosZ() + dCos);
                        return;
                    }
                    return;
                case 3145580:
                    if (lowerCase.equals("flag")) {
                        IINetHandlerPlayClient netHandler = MinecraftInstance.f157mc.getNetHandler();
                        netHandler.addToSendQueue(MinecraftInstance.classProvider.createCPacketPlayerPosition(thePlayer.getPosX(), thePlayer.getPosY(), thePlayer.getPosZ(), true));
                        netHandler.addToSendQueue(MinecraftInstance.classProvider.createCPacketPlayerPosition(0.5d, 0.0d, 0.5d, true));
                        netHandler.addToSendQueue(MinecraftInstance.classProvider.createCPacketPlayerPosition(thePlayer.getPosX(), thePlayer.getPosY(), thePlayer.getPosZ(), true));
                        netHandler.addToSendQueue(MinecraftInstance.classProvider.createCPacketPlayerPosition(thePlayer.getPosX() + dDoubleValue, thePlayer.getPosY() + ((Number) this.verticalValue.get()).doubleValue(), thePlayer.getPosZ() + dCos, true));
                        netHandler.addToSendQueue(MinecraftInstance.classProvider.createCPacketPlayerPosition(0.5d, 0.0d, 0.5d, true));
                        netHandler.addToSendQueue(MinecraftInstance.classProvider.createCPacketPlayerPosition(thePlayer.getPosX() + 0.5d, thePlayer.getPosY(), thePlayer.getPosZ() + 0.5d, true));
                        thePlayer.setPosition(thePlayer.getPosX() + ((-Math.sin(radians)) * 0.04d), thePlayer.getPosY(), thePlayer.getPosZ() + (Math.cos(radians) * 0.04d));
                        return;
                    }
                    return;
                default:
                    return;
            }
        }
    }
}
